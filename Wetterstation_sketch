#include "DHT.h"
#include "Wire.h"
#include "LiquidCrystal_I2C.h"
#include <virtuabotixRTC.h>

#define DHT1PIN 12 
#define DHT2PIN 13
#define DHTTYPE DHT22  

LiquidCrystal_I2C lcd(0x27,16,2);
DHT dht1(DHT1PIN, DHTTYPE); //Der Sensor wird ab jetzt mit „dth1“ angesprochen
DHT dht2(DHT2PIN, DHTTYPE); //Der Sensor wird ab jetzt mit „dth2“ angesprochen

const int RecordTime = 3;  
const int SensorPin = 3;   

int InterruptCounter;
float windSpeed;
virtuabotixRTC myRTC(9, 10,11);
void clearLcd();
void meassure();
 

void setup() {
  
  Serial.begin(9600); //Serielle Verbindung starten
  Serial.println("Wetterstation Programmstart");
  dht1.begin(); //DHT22 Sensor starten
  dht2.begin();
  lcd.init();
  lcd.backlight();
  lcd.setCursor(1,0);
  lcd.print("Programmstart");
  lcd.setCursor(1,1);
  lcd.print("Wetterstation");
  delay(2000);
  pinMode( 0 , INPUT); 
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
}



void clearLcd (){
  lcd.setCursor(0,0);
  lcd.print("                ");
  lcd.setCursor(0,1);
  lcd.print("                ");   
}



void serialTimeDate(uint8_t hour, uint8_t min, uint8_t sec, uint8_t day, uint8_t month, int year){

  char s[50];
  sprintf(s,"%02u/%02u/%04d %02u:%02u:%02u", day, month, year, hour, min, sec); 
  Serial.print("["); 
  Serial.print(s);
  Serial.print("]   "); 

}





void serialValues (float temp1, float hum1,float temp2,float hum2,float quali,float wsped ) {
  
  char t1[20];
  char h1[20];
  char t2[20];
  char h2[20];
  char q[20];
  char windspeed[20];
  float windspeedms = wsped/3.6f;
  char windspeedmschar[20];

  dtostrf (temp1,5,1,t1);
  dtostrf (hum1,5,1,h1);
  dtostrf (temp2,5,1,t2);
  dtostrf (hum2,5,1,h2);
  dtostrf (quali,6,1,q);
  dtostrf (wsped,-6,2,windspeed);
  dtostrf (windspeedms,-6,2,windspeedmschar);

  //Round1
 
  // Schreiben der Luftfeuchte in die erste Zeile des LCDs
  Serial.print("T1:");
  
  Serial.print(t1);
  
  Serial.print(" C    ");
  // Cursor des LCDs auf Spalte 0 und Zeile 1 (also zweite Zeile) setzen
 
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  Serial.print("H1:");
  
  Serial.print(h1);
 
  Serial.print(" %    "); // Kürzel \337 für das °-Zeichen verwenden
  
  //Round2

  // Schreiben der Luftfeuchte in die erste Zeile des LCDs
 
  // Schreiben der Luftfeuchte in die erste Zeile des LCDs
  Serial.print("T2:");

  Serial.print(t2);

  Serial.print(" C    ");
  // Cursor des LCDs auf Spalte 0 und Zeile 1 (also zweite Zeile) setzen

  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  Serial.print("H2:");
 
  Serial.print(h2);

  Serial.print(" %    "); // Kürzel \337 für das °-Zeichen verwenden
 
  
  //Round 3
  
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  Serial.print("Luftqualitaet");
  Serial.print(q);
  Serial.print("    ");


  //Round4
 
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  Serial.print("Speed: ");
  Serial.print(windspeed);  
  Serial.print(" km/h    ");
  
  Serial.print("Speed: ");
  Serial.print((windspeedmschar));  
  Serial.println(" m/s ..");
  
}


void showLcdTimeDate(uint8_t hour, uint8_t min, uint8_t sec, uint8_t day, uint8_t month, int year)
{
  char s1[20];
  char s2[20];

  sprintf(s1,"%02u/%02u/%04d",day, month, year); 
  sprintf(s2,"%02u:%02u:%02u",hour, min, sec);  
  clearLcd();
  lcd.setCursor(3,0);
  lcd.print(s1); 
  lcd.println("       ");
  lcd.setCursor(4,1);  
  lcd.print(s2);
  lcd.println("        ");
  delay(3000);
  clearLcd();
  
}


void showLcdValues(float temp1, float hum1,float temp2,float hum2,float quali,float wsped)
{
  char t1[20];
  char h1[20];
  char t2[20];
  char h2[20];
  char q[20];
  char windspeed[20];
  float windspeedms = wsped/3.6f;
  char windspeedmschar[20];

  dtostrf (temp1,5,1,t1);
  dtostrf (hum1,5,1,h1);
  dtostrf (temp2,5,1,t2);
  dtostrf (hum2,5,1,h2);
  dtostrf (quali,6,1,q);
  dtostrf (wsped,-6,2,windspeed);
  dtostrf (windspeedms,-6,2,windspeedmschar);

  //Round1
  lcd.setCursor(0,0);
  // Schreiben der Luftfeuchte in die erste Zeile des LCDs
  lcd.print("T1:");
  lcd.setCursor(4,0);
  lcd.print(t1);
  lcd.setCursor(11,0);
  lcd.print("\337C");
  // Cursor des LCDs auf Spalte 0 und Zeile 1 (also zweite Zeile) setzen
  lcd.setCursor(0, 1);
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  lcd.print("H1:");
  lcd.setCursor(4, 1);
  lcd.print(h1);
  lcd.setCursor(12, 1);
  lcd.print("%"); // Kürzel \337 für das °-Zeichen verwenden
  delay(3000);
  clearLcd();
 
  //Round2

  // Schreiben der Luftfeuchte in die erste Zeile des LCDs
  lcd.setCursor(0,0);
  // Schreiben der Luftfeuchte in die erste Zeile des LCDs
  lcd.print("T2:");
  lcd.setCursor(4,0);
  lcd.print(t2);
  lcd.setCursor(11,0);
  lcd.print("\337C");
  // Cursor des LCDs auf Spalte 0 und Zeile 1 (also zweite Zeile) setzen
  lcd.setCursor(0, 1);
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  lcd.print("H2:");
  lcd.setCursor(4, 1);
  lcd.print(h2);
  lcd.setCursor(12, 1);
  lcd.print("%"); // Kürzel \337 für das °-Zeichen verwenden
  delay(3000);
  clearLcd();
  
  //Round 3
  lcd.setCursor(1, 0);
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  lcd.print("Luftqualitaet");
  lcd.setCursor(4, 1);
  lcd.print(q);
  delay(3000);
  clearLcd();


  //Round4
  lcd.setCursor(0, 0);
  // Schreiben der Raumtemperatur in die zweite Zeile des LCDs
  lcd.print("Speed:");
  lcd.print(windspeed);  
  lcd.print("km/h");
  lcd.setCursor(0, 1);
  lcd.print("Speed:");
  lcd.print((windspeedmschar));  
  lcd.print("m/s");


  
 

  
}



void meassure() {
  InterruptCounter = 0;
  attachInterrupt(digitalPinToInterrupt(SensorPin), countup, RISING);
  delay(1000 * RecordTime);
  detachInterrupt(digitalPinToInterrupt(SensorPin));
  windSpeed = (float)InterruptCounter / (float)RecordTime * 2.4;
}

void countup() {
  InterruptCounter++;
} 





void loop() {
  
  // Eine Sekunde Verzögerung zwischen Messungen
  // --> Lesen der Temperatur / Feuchte dauert ca. t = 0,25 Sekunden
  delay(1000);

  // Lesen von Feuchte und Temperatur und Schreiben der Werte in die float-Variablen h und t 
  meassure();
  
   
  float hum1 = dht1.readHumidity();
  float temp1 = dht1.readTemperature();
  
  float hum2 = dht2.readHumidity();
  float temp2 = dht2.readTemperature();
  
  int quali = analogRead(0);


  if ( (temp1+temp2)/2 > 24 ||(hum1+hum2)/2 > 60){
    digitalWrite(7,HIGH); 
    digitalWrite(8,LOW); 
  } else {
    digitalWrite(7,LOW);
    digitalWrite(8,HIGH); 
  }

   //Überprüfung, ob ein Lesevorgang gescheitert ist, evtl. Fehlerausgabe über seriellen Monitor
  if (isnan(hum1) || isnan(temp1) || isnan(hum2) || isnan(temp2)) {
    Serial.println(F("Lesevorgang DHT Sensor fehlgeschlagen!"));
  }

  myRTC.updateTime();

  showLcdTimeDate(myRTC.hours, myRTC.minutes, myRTC.seconds,myRTC.dayofmonth, myRTC.month, myRTC.year);
  showLcdValues(temp1, hum1, temp2, hum2, quali, windSpeed);
  serialTimeDate(myRTC.hours, myRTC.minutes, myRTC.seconds,myRTC.dayofmonth, myRTC.month, myRTC.year);
  serialValues(temp1, hum1, temp2, hum2, quali, windSpeed);

   
}
